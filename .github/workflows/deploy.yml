name: Test-Then-Deploy

on:
  push:
    branches:
      - main
      - staging

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    strategy:
      matrix:
        ruby-version: [ "3.0.3" ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Run db migration
        run: bundle exec rake db:create db:migrate 2>/dev/null || bundle exec rake db:migrate
        env:
          BOOKMARK_MANAGER_API_DATABASE_USERNAME: postgres
          BOOKMARK_MANAGER_API_DATABASE_PASSWORD: postgres
          BOOKMARK_MANAGER_API_DATABASE_HOST: localhost
      - name: Run tests
        run: bundle exec rspec
        env:
          BOOKMARK_MANAGER_API_DATABASE_USERNAME: postgres
          BOOKMARK_MANAGER_API_DATABASE_PASSWORD: postgres
          BOOKMARK_MANAGER_API_DATABASE_HOST: localhost
          ENVIRONMENT: TEST


  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email:  ${{secrets.HEROKU_USER_EMAIL}}